<ui:composition template="/WEB-INF/templates/showcase.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:o="http://omnifaces.org/ui"
>
    <ui:define name="description">
        <p>
        	FacesViews is a mechanism to use SEO-friendly extensionless URLs in a JSF application
            without the need to enlist individual Facelet source files in some configuration file.
        </p>
        <p>
            Instead, Facelets source files can be put into either the special <code>/WEB-INF/faces-views</code>
            directory, from where they will be automatically scanned (no configuration whatsoever required) or an
            explicit directory can be configured to be scanned. The web app root is supported as well.
        </p>
        
        <p>
        	Example of configuring FacesViews to make all Facelets found in the root and its sub-directories (excluding /WEB-INF, /META-INF and /resources)
        	available as extensionless URLs:
        </p>

		<pre class="prettyprint"><code class="lang-xml">
&lt;context-param&gt;
    &lt;param-name&gt;org.omnifaces.FACES_VIEWS_SCAN_PATHS&lt;/param-name&gt;
    &lt;param-value&gt;/*.xhtml&lt;/param-value&gt;
&lt;/context-param&gt;
		</code></pre>
           
        <p> 
        	See <a href="#{_apiURL}org/omnifaces/facesviews/package-summary.html">package documentation</a>
            for additional details.
        </p>
        
        <p>
        	Note that there is some overlap between this feature and <a href="http://ocpsoft.org/prettyfaces">PrettyFaces</a>.
        	The difference is that FacesViews has a focus on zero- or very minimal config, where PrettyFaces has a focus on 
        	very powerful mapping mechanisms, which of course need some level of configuration. As such FacesViews will only
        	focus on auto discovering views and mapping them to both <code>.xhtml</code> and to no-extension without needing to explicitly
        	declare the <code>FacesServlet</code> in <code>web.xml</code>.
        </p>
        
        <p>
        	Specifically, FacesViews will thus <em>not</em> become a general URL rewriting tool (e.g. one that maps path segments to parameters, 
        	or that totally changes the name of the URL). For this the user is advised to look at the aforementioned 
        	<a href="http://ocpsoft.org/prettyfaces">PrettyFaces</a>.
        </p>
        
    </ui:define>

    <ui:define name="demo">
    	<p>
    		The showcase application runs on FacesViews and is thus an implicit demo. An extra demo
    		is given below:
    	</p>
        <p>
            Navigate to FacesViews pages without an extension: 
            <a href="#{request.contextPath}/viewsdemo">viewsdemo</a>
        </p>
    </ui:define>
</ui:composition>