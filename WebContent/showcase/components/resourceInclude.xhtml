<ui:composition template="/WEB-INF/templates/showcase.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:of="http://omnifaces.org/functions"
	xmlns:os="http://omnifaces.org/showcase"
>
	<ui:define name="description">
		<p>
			The <code>&lt;o:resourceInclude&gt;</code> component can be used to catch the output from a JSP or Servlet
			resource and render it as output to the JSF writer. In effect, this allows you to include both Servlets and
			JSP pages in e.g. Facelets.
		</p>
		<p>
			Note that this isn't recommended as a lasting solution, but it might ease a migration from legacy JSP with
			smelly scriptlets and all on them to a more sane and modern Facelets application.
		</p>
	</ui:define>

	<ui:define name="example">
		 <h:form>
			<p>
				Content before Servlet include
				<br/>
				<o:resourceInclude path="/testservlet" />
				<br/>
				Content after Servlet include
			</p>
		 </h:form>
	</ui:define>

	<ui:define name="documentation">
		<ul>
			<li><a href="http://wiki.omnifaces.googlecode.com/hg/vdldoc/o/resourceInclude.html"><code>o:resourceInclude</code> VDL documentation</a></li>
			<li><a href="http://wiki.omnifaces.googlecode.com/hg/javadoc/org/omnifaces/component/resourceinclude/ResourceInclude.html"><code>ResourceInclude</code> API documentation</a></li>
			<li><a href="http://code.google.com/p/omnifaces/source/browse/src/org/omnifaces/component/resourceinclude/ResourceInclude.java"><code>ResourceInclude</code> source code</a></li>
		</ul>
	</ui:define>
</ui:composition>