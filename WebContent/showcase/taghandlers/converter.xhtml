<ui:composition template="/WEB-INF/templates/showcase.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:demo="http://omnifaces.org/showcase"
>
	<ui:define name="description">
		<p>
			The <code>&lt;o:converter&gt;</code> basically extends the <code>&lt;f:converter&gt;</code> tag family with the
			possibility to evaluate the value expression in all attributes on a per request basis instead of on a per view
			build time basis. This allows the developer to change the attributes on a per request basis.
		</p>
		<p>
			When you specify for example the standard <code>&lt;f:convertDateTime&gt;</code> by
			<code>converterId="javax.faces.DateTime"</code>, then you'll be able to use all its attribuces such as
			<code>pattern</code> and <code>locale</code> as per its documentation, but then with the possibility to supply
			request based value expressions.
		</p>
		<pre class="prettyprint"><code class="xhtml">
&lt;o:converter converterId="javax.faces.DateTime" pattern="\#{item.pattern}" locale="\#{item.locale}" /&gt;
		</code></pre>
		<p>
			The converter ID of al standard JSF converters can be found in 
			<a href="http://docs.oracle.com/javaee/6/api/javax/faces/convert/package-summary.html" rel="ext">their javadocs</a>.
			First go to the javadoc of the class of interest, then go to <code>CONVERTER_ID</code> in its field summary 
			and finally click the Constant Field Values link to see the value.
		</p>
		<p>
			In the below demo, it was the intent to use <code>&lt;f:convertDateTime&gt;</code> as follows:
		</p>
		<pre class="prettyprint"><code class="xhtml">
&lt;f:convertDateTime pattern="\#{item.pattern}" locale="\#{item.locale}" /&gt;
		</code></pre>
		<p>
			But this wouldn't even run, it will throw a <code>javax.faces.view.facelets.TagAttributeException</code> 
			that the attribute values are <code>null</code>. It works as intuitively expected with the 
			<code>&lt;o:converter&gt;</code> as it allows a render time evaluation of attributes.
		</p>
	</ui:define>

	<ui:define name="demo">
		<h:dataTable value="#{converterBean.items}" var="item">
			<h:column>
				<f:facet name="header">Language</f:facet>
				#{item.locale.displayLanguage}
			</h:column>
			<h:column>
				<f:facet name="header">Full date time pattern</f:facet>
				<h:outputText value="#{now}">
					<o:converter converterId="javax.faces.DateTime" pattern="#{item.pattern}" locale="#{item.locale}" />
				</h:outputText>
			</h:column>
		</h:dataTable>
	</ui:define>
</ui:composition>