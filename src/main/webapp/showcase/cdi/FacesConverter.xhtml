<ui:composition template="/WEB-INF/templates/showcase.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:of="http://omnifaces.org/functions"
>
	<ui:define name="meta">
		<f:metadata>
			<f:attribute name="api.paths" value="cdi/converter/ConverterManager,application/ConverterProvider,application/OmniApplication,application/OmniApplicationFactory" />
			<f:attribute name="src.paths" value="classes/org/omnifaces/showcase/cdi/SomeConverter.java,classes/org/omnifaces/showcase/cdi/SomeCDI.java,classes/org/omnifaces/showcase/cdi/SomeEJB.java" />
		</f:metadata>
	</ui:define>

	<ui:define name="description-extra">
		<h3>CDI issues in EAR</h3>
		<p>
			Note that CDI has known issues when OmniFaces is bundled in multiple WARs in a single EAR.
			It's important to understand that those issues are not related to OmniFaces, but to the broken CDI spec.
			For an overview of those issues, please refer
			<a href="https://github.com/omnifaces/omnifaces/wiki/Known-Issues-(CDI)">Known issues of OmniFaces CDI features in combination with specific application servers</a>. 
		</p>
	</ui:define>

	<ui:define name="demo">
		<h3>Submit the form</h3>
		<p>
			Converter will print itself and both the injected EJB and CDI bean in a faces message.
			Note: EJB is stateless and CDI bean is request scoped.
		</p>
		<h:form>
			<h:inputText converter="someConverter" />
			<h:commandButton value="Submit">
				<f:ajax execute="@form" render="@form" />
			</h:commandButton>
			<h:messages />
		</h:form>
	</ui:define>
</ui:composition>