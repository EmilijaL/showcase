<ui:composition template="/WEB-INF/templates/showcase.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:of="http://omnifaces.org/functions"
>
	<ui:define name="meta">
		<f:metadata>
			<f:attribute name="api.paths" value="converter/ListConverter" />
			<f:attribute name="src.paths" value="classes/org/omnifaces/showcase/converters/SelectListBean.java,classes/org/omnifaces/showcase/model/ExampleEntity.java" />
		</f:metadata>
	</ui:define>

	<ui:define name="description-extra">
		<h3>Demo</h3>
		<p>
			The demo belows shows the PrimeFaces 
			<a href="http://primefaces.org/showcase/ui/data/pickList.xhtml"><code>&lt;p:pickList&gt;</code></a>
			component, which is a famous example of a component that does not use select items. Another example of such a PrimeFaces component is the
			<a href="http://primefaces.org/showcase/ui/input/autoComplete.xhtml"><code>&lt;p:autoComplete&gt;</code></a>.
		</p>
	</ui:define>

	<ui:define name="demo">
		<h:form>
			<p>
				<b>Selected items</b>:
				<ui:fragment rendered="#{not empty selectListBean.model.target}">
					<ui:repeat value="#{selectListBean.model.target}" var="entity" varStatus="loop">
						#{entity.value}#{loop.last ? '' : ', '}
					</ui:repeat>
				</ui:fragment>
				<h:outputText value="[no selection made]" rendered="#{empty selectListBean.model.target}"/>
			</p>

			<p>
				<b>Choose a city, then press Select</b>:
				<p:pickList value="#{selectListBean.model}" var="entity" itemValue="#{entity}" itemLabel="#{entity.value}">
					<o:converter converterId="omnifaces.ListConverter" list="#{selectListBean.model.source}" />
				</p:pickList>
			</p>

			<p>
				<h:commandButton value="Select">
					<f:ajax execute="@form" render="@form"/>
				</h:commandButton>
			</p>
		</h:form>
	</ui:define>
</ui:composition>